demo()
demo(Japanese)
library(epi)
library(Epi)
library(dplyr)
install.packages(Epi, dplyr)
install.packages(Epi)
install.packages("Epi")
install.packages("Epi", "dplyr", "skimr", "ggplot2")
yes
install.packages("Epi", "dplyr", "skimr", "ggplot2")
install.packages("Epi", "dplyr", "skimr", "ggplot2")
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
dieta = na.omit(diet, package = "Epi")
library(Epi)
dieta = na.omit(diet, package = "Epi")
library(skimr)
library(dplyr)
library(ggplot2)
library(Epi)
dieta = na.omit(diet, package = "Epi")
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
dieta = na.omit(diet, package = "Epi")
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
dieta = na.omit(diet, package = "Epi")
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
dieta = na.omit(diet, package = "Epi")
library(GGally)
install.packages(c("GGally", "plotly"))
library(GGally)
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
library(GGally)
dieta = data(diet, package = "Epi")
skim(dieta)
medidas = dieta %>%
group_by(as.factor(chd)) %>%
summarise(media = mean(weight),
mediana = media(weight),
desv = sd(weight),
cv = round(desv/media*100, 2))
dieta = na.omit(diet)
skim(dieta)
medidas = dieta %>%
group_by(as.factor(chd)) %>%
summarise(media = mean(weight),
mediana = media(weight),
desv = sd(weight),
cv = round(desv/media*100, 2))
# Tabla
medidas = dieta %>%
group_by(as.factor(chd)) %>%
summarise(media = mean(weight),
mediana = median(weight),
desv = sd(weight),
cv = round(desv/media*100, 2))
View(medidas)
graf1 = ggplot(dieta, # Base
aes(x = as.factor(chd), y = weight, fill = as.factor(chd)))
geom_boxplot()
graf1
graf2 = dieta %>%
select(height, weight, fibre, fat, chd) %>%
transform(chd = factor(chd)) %>%
ggpairs(aes(colour = chd, alpha = 0.1))+
theme_bw()
install.packages("GGally")
install.packages(plotly)
install.packages("plotly")
graf1 = ggplot(dieta, # Base
aes(x = as.factor(chd), y = weight, fill = as.factor(chd))) +
geom_boxplot()
graf1
graf1 = ggplot(dieta, # Base
aes(x = as.factor(chd), y = weight, fill = as.factor(chd))) +
geom_boxplot()
graf1
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
library(GGally)
library(plotly)
graf2 = dieta %>%
select(height, weight, fibre, fat, chd) %>%
transform(chd = factor(chd)) %>%
ggpairs(aes(colour = chd, alpha = 0.1))+
theme_bw()
graf2
graf2 = dieta %>%
select(height, weight, fibre, fat, chd) %>%
transform(chd = factor(chd)) %>%
ggpairs(aes(colour = chd, alpha = 0.1))+
theme_bw()
# AED - Práctica 1
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
library(GGally)
library(plotly)
dieta = data(diet, package = "Epi")
dieta = na.omit(diet)
# Realizar un descriptivo
skim(dieta)
# Tabla
medidas = dieta %>%
group_by(as.factor(chd)) %>%
summarise(media = mean(weight),
mediana = median(weight),
desv = sd(weight),
cv = round(desv/media*100, 2))
View(medidas)
# De la tabola anterior podemos observar que los pacientes que no presentan
# cardiopatía coronaria pesan en promedio 72.75kg mientras que los que la
# presentan pesan en promedio 70.09.
#
# En cuanto a la mediana, el 50% de los que presentan cardiopatía pesan 73.21kg
# o menos y el otro 50% más que este valor.
#
# Al observar la desviación estándar y el coeficiente de variación para ambos
# grupos, se encontró que aunque los que no presentan cardiopatía tienen una
# desviación más alta no son los más dispersos
# Diagrama de Cajas y bigotes
graf1 = ggplot(dieta, # Base
aes(x = as.factor(chd), y = weight, fill = as.factor(chd))) +
geom_boxplot()
graf1
# Diagrama
graf2 = dieta %>%
select(height, weight, fibre, fat, chd) %>%
transform(chd = factor(chd)) %>%
ggpairs(aes(colour = chd, alpha = 0.1))+
theme_bw()
graf2
library(readxl)
ejemplo1 <- read_excel("Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos/bases_datos/ejemplo1.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric"))
View(ejemplo1)
library(readxl)
x <- read_excel("Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos/bases_datos/ejemplo1.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric"))
S = cov(x);S
VT = sum(diag(S)); VT
VG = det(S) = 0.34
?det
VG = det(S) = 0.34
VG = det(S)
VG = det(S); VG
R = cor(X); R
# 3. Matriz de correlación
R = cor(x); R
D = diag(diag(S)); D
D.raiz <- sqrt(D)
D.raiz
setwd("~/Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos")
screen <- read.csv("~/Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos/bases_datos/screen.csv")
View(screen)
S = cov; S
screen <- read.csv("~/Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos/bases_datos/screen.csv")
S = cov; S
S = cov(screen$Avg_Daily_Screen_Time_hr); S
library(readxl)
x <- read_excel("Documents/GitHub/MACC_svelez/Análisis Estadístico de Datos/bases_datos/ejemplo1.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric"))
S = cov(screen$Avg_Daily_Screen_Time_hr, screen$Age, screen$Educational_to_Recreational_Ratio); S
S = cov(c(screen$Avg_Daily_Screen_Time_hr, screen$Age, screen$Educational_to_Recreational_Ratio)); S
S = cov(screen$Avg_Daily_Screen_Time_hr, screen$Age); S
S = cov(screen$Avg_Daily_Screen_Time_hr, screen$Educational_to_Recreational_Ratio); S
library(readxl)
x <- read_excel("bases_datos/ejemplo1.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric"))
S = cov(x);S
library(dplyr)
screen_cuant %>% select(Age, Avg_Daily_Screen_Time_hr, Educational_to_Recreational_Ratio)
screen_cuant <- screen %>% select(Age, Avg_Daily_Screen_Time_hr, Educational_to_Recreational_Ratio)
View(screen_cuant)
S = cov(screen_cuant); S
View(S)
View(S)
VG = det(S); VG
VT = sum(diag(S)); VT
VG = det(S); VG
VT = sum(diag(S)); VT
VG = det(S); VG
S = cov(screen_cuant); S
VG = det(S); VG
VT = sum(diag(S)); VT
S = cov(x);S
VT = sum(diag(S)); VT
VG = det(S); VG
S = cov(screen_cuant); S
VG = det(S); VG
VT = sum(diag(S)); VT
graf1 = ggplot(screen,
aes(x = Health_Impacts,
y = Avg_Daily_Screen_Time_hr,
fill=Health_Impacts))+
geom_boxplot();graf1
library(Epi)
library(dplyr)
library(skimr)
library(ggplot2)
library(GGally)
library(plotly)
library(moments)
graf1 = ggplot(screen,
aes(x = Health_Impacts,
y = Avg_Daily_Screen_Time_hr,
fill=Health_Impacts))+
geom_boxplot();graf1
Diagrama de dispersión separado por género.
screen2 = screen %>% select(Avg_Daily_Screen_Time_hr, Educational_to_Recreational_Ratio, Gender)
ggpairs(screen2, aes(color = Gender))
